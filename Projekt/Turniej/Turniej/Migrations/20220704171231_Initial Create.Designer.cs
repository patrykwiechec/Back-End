// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Turniej.Context;

#nullable disable

namespace Turniej.Migrations
{
    [DbContext(typeof(TurniejContext))]
    [Migration("20220704171231_Initial Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Turniej.Models.Trenerzy", b =>
                {
                    b.Property<int>("IdTrenera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_trenera");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTrenera"), 1L, 1);

                    b.Property<int>("IleMedaliT")
                        .HasColumnType("int")
                        .HasColumnName("ile_medali_t");

                    b.Property<string>("ImieT")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("imie_t");

                    b.Property<string>("NazwiskoT")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nazwisko_t");

                    b.HasKey("IdTrenera")
                        .HasName("PK__trenerzy__E25E0CF801356BA1");

                    b.ToTable("trenerzy", (string)null);
                });

            modelBuilder.Entity("Turniej.Models.Uczestnictwo", b =>
                {
                    b.Property<int>("IdUczestnictwa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_uczestnictwa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUczestnictwa"), 1L, 1);

                    b.Property<int?>("IdZawodnika")
                        .HasColumnType("int")
                        .HasColumnName("id_zawodnika");

                    b.Property<int?>("IdZawodow")
                        .HasColumnType("int")
                        .HasColumnName("id_zawodow");

                    b.HasKey("IdUczestnictwa")
                        .HasName("PK__uczestni__79BC730BAA104BC4");

                    b.HasIndex("IdZawodnika");

                    b.HasIndex("IdZawodow");

                    b.ToTable("uczestnictwo", (string)null);
                });

            modelBuilder.Entity("Turniej.Models.Zawodnicy", b =>
                {
                    b.Property<int>("IdZawodnika")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_zawodnika");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZawodnika"), 1L, 1);

                    b.Property<int?>("IdTrenera")
                        .HasColumnType("int")
                        .HasColumnName("id_trenera");

                    b.Property<int>("IleMedaliT")
                        .HasColumnType("int")
                        .HasColumnName("ile_medali_t");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("imie");

                    b.Property<string>("Kraj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("kraj");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("nazwisko");

                    b.HasKey("IdZawodnika")
                        .HasName("PK__zawodnic__96B2F8BC6BADB5CD");

                    b.HasIndex("IdTrenera");

                    b.ToTable("zawodnicy", (string)null);
                });

            modelBuilder.Entity("Turniej.Models.Zawody", b =>
                {
                    b.Property<int>("IdZawodow")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_zawodow");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZawodow"), 1L, 1);

                    b.Property<string>("Lokalizacja")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("lokalizacja");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nazwa");

                    b.HasKey("IdZawodow")
                        .HasName("PK__zawody__4E37E54B3297864F");

                    b.ToTable("zawody", (string)null);
                });

            modelBuilder.Entity("Turniej.Models.Uczestnictwo", b =>
                {
                    b.HasOne("Turniej.Models.Zawodnicy", "IdZawodnikaNavigation")
                        .WithMany("Uczestnictwos")
                        .HasForeignKey("IdZawodnika")
                        .HasConstraintName("FK__uczestnic__id_za__2B3F6F97");

                    b.HasOne("Turniej.Models.Zawody", "IdZawodowNavigation")
                        .WithMany("Uczestnictwos")
                        .HasForeignKey("IdZawodow")
                        .HasConstraintName("FK__uczestnic__id_za__2C3393D0");

                    b.Navigation("IdZawodnikaNavigation");

                    b.Navigation("IdZawodowNavigation");
                });

            modelBuilder.Entity("Turniej.Models.Zawodnicy", b =>
                {
                    b.HasOne("Turniej.Models.Trenerzy", "IdTreneraNavigation")
                        .WithMany("Zawodnicies")
                        .HasForeignKey("IdTrenera")
                        .HasConstraintName("FK__zawodnicy__id_tr__286302EC");

                    b.Navigation("IdTreneraNavigation");
                });

            modelBuilder.Entity("Turniej.Models.Trenerzy", b =>
                {
                    b.Navigation("Zawodnicies");
                });

            modelBuilder.Entity("Turniej.Models.Zawodnicy", b =>
                {
                    b.Navigation("Uczestnictwos");
                });

            modelBuilder.Entity("Turniej.Models.Zawody", b =>
                {
                    b.Navigation("Uczestnictwos");
                });
#pragma warning restore 612, 618
        }
    }
}
